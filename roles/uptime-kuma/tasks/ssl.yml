---
# SSL/TLS configuration tasks

- name: Install certbot and dependencies
  dnf:
    name:
      - certbot
      - python3-certbot
      - python3-certbot-nginx
    state: present

- name: Create Let's Encrypt directory
  file:
    path: /etc/letsencrypt
    state: directory
    mode: '0755'

- name: Configure Let's Encrypt renewal timer
  template:
    src: certbot-renewal.timer.j2
    dest: /etc/systemd/system/certbot-renewal.timer
    mode: '0644'
  notify: reload systemd

- name: Configure Let's Encrypt renewal service
  template:
    src: certbot-renewal.service.j2
    dest: /etc/systemd/system/certbot-renewal.service
    mode: '0644'
  notify: reload systemd

- name: Start and enable Let's Encrypt renewal timer
  systemd:
    name: certbot-renewal.timer
    state: started
    enabled: yes

- name: Check if certificate already exists
  stat:
    path: "/etc/letsencrypt/live/{{ hostname }}/fullchain.pem"
  register: cert_file

- name: Request Let's Encrypt certificate
  command: >
    certbot certonly --standalone
    --non-interactive
    --agree-tos
    --email {{ ssl_email }}
    -d {{ hostname }}
    {% if ssl_staging | bool %}--staging{% endif %}
    --pre-hook "systemctl stop nginx"
    --post-hook "systemctl start nginx"
  when: not cert_file.stat.exists

- name: Configure automatic certificate renewal
  cron:
    name: "Let's Encrypt renewal"
    special_time: daily
    job: "certbot renew --quiet --pre-hook 'systemctl stop nginx' --post-hook 'systemctl start nginx'"
    user: root

- name: Create SSL directory for Uptime Kuma
  file:
    path: "{{ uptime_kuma_data_dir }}/ssl"
    state: directory
    mode: '0750'
    owner: root
    group: docker

- name: Copy SSL certificates to Uptime Kuma directory
  copy:
    src: "/etc/letsencrypt/live/{{ hostname }}/{{ item.src }}"
    dest: "{{ uptime_kuma_data_dir }}/ssl/{{ item.dest }}"
    remote_src: yes
    mode: '0640'
    owner: root
    group: docker
  with_items:
    - { src: 'fullchain.pem', dest: 'cert.pem' }
    - { src: 'privkey.pem', dest: 'key.pem' }
  when: cert_file.stat.exists
  notify: restart uptime-kuma 